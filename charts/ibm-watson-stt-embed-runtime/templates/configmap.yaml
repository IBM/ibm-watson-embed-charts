{{- $modelList := (list) -}}
{{- range $model := .Values.models -}}
  {{- if .enabled -}}
    {{- $modelList = append $modelList $model.catalogName -}}
  {{- end -}}
{{- end -}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ibm-watson-stt-embed-runtime.fullname" . }}
  labels:
    {{- include "ibm-watson-stt-embed-runtime.labels" . | nindent 4 }}
data:
  env_config.json: |
    {
      "allowDashboard": false,
      "anonymizeLogs": false,
      "baseModelsSURL": {
        "service": "localPath",
        "urlSuffix": "var/catalog.json"
      },
      "clusterGroups": {
        "default": {
          "service_type": "speech-to-text",
          "component": "runtime",
          "dns": "{{ include "ibm-watson-stt-embed-runtime.fullname" . }}",
          "group": "default",
          "models":
            {{- $modelList | mustToPrettyJson | nindent 12 }}
        }
      },
      "defaultSTTModel": "{{ .Values.defaultModel}}",
      "defaultVerbosity": "INFO",
      "meteringEnabled": false,
      "requireCookies": false,
      "setCookies": false,
      "serviceDependencies": {
        "baseModelsStore": {
          "type": "UrlService",
          "healthCheckSuffix": "/",
          "baseUrl": "http://127.0.0.1:3333/"
        }
      }
    }

  sessionPools.yaml: |
    defaultPolicy: DefaultPolicy
    sessionPoolPolicies:
      PreWarmingPolicy:
{{- range $modelName := $modelList -}}
  {{- printf "- name: %s" $modelName | nindent 8 -}}
{{- end }}

  sessionPools.py: |
    class PreWarmingPolicy:
        sessionPool = {
            'minWarmSessions': 1,
            'maxUseCount': 1000
        }

    class NoPreWarmingPolicy:
        sessionPool = {
            'maxUseCount': 1000
        }

    class DefaultPolicy:
        sessionPool = {}


  resourceRequirements.py: |
    class RapidResourceRequirement:
        resourceRequirement = {
            'marginalMem': 0.9 * 2 ** 30, # 900MB
            'marginalCpu': 60
        }

    class RnntResourceRequirement:
        resourceRequirement = {
            'marginalMem': 0.06 * 2 ** 30,  # 60MB
            'marginalCpu': 12.5
        }

  haproxy.cfg: |
    global
      ssl-default-bind-options no-sslv3
      ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

      ssl-default-server-options no-sslv3
      ssl-default-server-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

      tune.ssl.default-dh-param 2048
      log  127.0.0.1:1514       local0  debug

    defaults
      mode http
      log global
      option httplog
      option dontlognull

      retries 0
      timeout connect 5000
      timeout client 100000
      timeout server 100000
      option http-server-close
      option http-no-delay

      # JSON error responses
      errorfile 400 /etc/haproxy/errors/400_json.http
      errorfile 403 /etc/haproxy/errors/403_json.http
      errorfile 408 /etc/haproxy/errors/408_json.http
      errorfile 500 /etc/haproxy/errors/500_json.http
      errorfile 502 /etc/haproxy/errors/502_json.http
      errorfile 503 /etc/haproxy/errors/503_json.http
      errorfile 504 /etc/haproxy/errors/504_json.http

      stats enable
      stats uri /stats

    frontend the-frontend
      bind *:1443 ssl crt /tmp/haproxy.tls

      http-request add-header Via %[req.ver]\ %fi
      http-request add-header X-Forwarded-Proto http if { hdr_cnt(X-Forwarded-Proto) eq 0 }
      capture request header X-Global-Transaction-Id len 32
      default_backend the-backend

    backend the-backend
      server runtime 127.0.0.1:1080 check


  prepareModels.sh: |-
    {{ tpl (.Files.Get "files/prepareModels.sh") . | nindent 4 }}
