{{- if not (eq .Values.license true) }}
  {{- fail "Product licenses must be read and accepted. Then set `license` to true" }}
{{- end }}

{{- /* Construct the list of enabled models */}}
{{- $enabledModels := (include "ibm-embed-helpers.enabledModelImageConfigs" .) | fromYamlArray }}
{{- $modelsList := (list) }}
{{- range $enabledModels }}
  {{- $modelsList = append $modelsList .catalogName }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ibm-watson-tts-embed.runtime.fullname" . }}
  labels:
    {{- include "ibm-watson-tts-embed.runtime.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "ibm-watson-tts-embed.runtime.selectorLabels" . | nindent 6 }}
  progressDeadlineSeconds: 1800
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
  template:
    metadata:
      labels:
        {{- include "ibm-watson-tts-embed.runtime.labels" . | nindent 8 }}
      annotations:
        checksum/secrets: {{ include (print .Template.BasePath "/runtime/secrets.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
        {{- .Values.imagePullSecrets | toYaml | nindent 8 }}
      {{- include "ibm-embed-helpers.podSecurityContext" . | nindent 6 -}}
      terminationGracePeriodSeconds: 1800
      containers:
      - name: runtime
        image: {{ include "ibm-embed-helpers.imageReference" (list . .Values.images.runtime) }}
        {{- include "ibm-embed-helpers.containerSecurityContext" . | nindent 8 -}}
        resources:
          {{- .Values.resources.runtime | toYaml | nindent 10 }}
        env:
        - name: ACCEPT_LICENSE
          value: {{ .Values.license | quote }}
        - name: LOG_LEVEL
          value: "INFO"
        - name: USE_LOCAL_MODELS
          value: "false"
        - name: ENABLE_CUSTOMIZATIONS
          value: {{ .Values.customizationEnabled | quote }}
        - name: CATALOG_PATH
          value: "{{ .Values.modelVersion }}/catalog.json"
        - name: RUNTIME_SERVICE
          value: "{{ include "ibm-watson-tts-embed.runtime.fullname" . }}:443"
        - name: CUSTOMIZATIONS_SERVICE
          value: "{{ include "ibm-watson-tts-embed.customization.fullname" . }}:443"
        - name: MODELS
          value: {{ join "," $modelsList }}
        - name: DEFAULT_MODEL
          value: {{ .Values.defaultModel | quote }}
        - name: MODEL_STORAGE_BUCKET
          value: {{ .Values.objectStorage.bucket | quote }}
        - name: MODEL_STORAGE_ENDPOINT
          value: {{ .Values.objectStorage.endpoint | quote }}
        - name: MODEL_STORAGE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "ibm-watson-tts-embed.runtime.fullname" . }}
              key: accesskey
        - name: MODEL_STORAGE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "ibm-watson-tts-embed.runtime.fullname" . }}
              key: secretkey
        - name: RESOURCES_CPU
          valueFrom:
            resourceFieldRef:
              containerName: runtime
              resource: requests.cpu
        - name: RESOURCES_MEMORY
          valueFrom:
            resourceFieldRef:
              containerName: runtime
              resource: requests.memory
        ports:
        - containerPort: 1080
        startupProbe:
          tcpSocket:
            port: 1080
          failureThreshold: 30
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 1080
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /v1/miniHealthCheck
            port: 1080
          periodSeconds: 10
        volumeMounts:
        - mountPath: /opt/ibm/chuck.x86_64/var
          name: chuck-var
        - mountPath: /opt/ibm/chuck.x86_64/logs
          name: chuck-logs
        - mountPath: /etc/ssl/private/client
          name: client-tls
        - name: tmp
          mountPath: /tmp
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sleep
              - "15"

      - name: haproxy
        image: {{ include "ibm-embed-helpers.imageReference" (list . .Values.images.haproxy) }}
        {{- include "ibm-embed-helpers.containerSecurityContext" . | nindent 8 -}}
        resources:
          {{- .Values.resources.haproxy | toYaml | nindent 10 }}
        env:
        - name: ACCEPT_LICENSE
          value: {{ .Values.license | quote }}
        - name: TLS_SERVER_CERT_FILE
          value: /etc/ssl/private/server/tls.crt
        - name: TLS_SERVER_KEY_FILE
          value: /etc/ssl/private/server/tls.key
        ports:
        - containerPort: 1443
        startupProbe:
          tcpSocket:
            port: 1443
          failureThreshold: 30
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 1443
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /v1
            port: 1443
            scheme: HTTPS
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/ssl/private/server
          name: server-tls
        - name: tmp
          mountPath: /tmp

      volumes:
        - name: chuck-var
          emptyDir: {}
        - name: chuck-logs
          emptyDir: {}
        - name: server-tls
          secret:
            defaultMode: 420
            secretName: {{ include "ibm-watson-tts-embed.fullname" . }}-server-tls
        - name: client-tls
          secret:
            defaultMode: 420
            secretName: {{ include "ibm-watson-tts-embed.fullname" . }}-client-tls
        - name: tmp
          emptyDir: {}

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/arch"
                operator: In
                values:
                  - "amd64"
